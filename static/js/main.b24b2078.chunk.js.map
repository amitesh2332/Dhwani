{"version":3,"sources":["Page1.js","PieChart.js","App.js","reportWebVitals.js","index.js"],"names":["Page1","props","handleClickArg","state","call","data","loading","this","setState","setTimeout","axios","get","headers","then","console","log","catch","error","className","to","onClick","style","textAlign","marginTop","type","color","height","width","class","Object","keys","map","val","src","avatar","alt","first_name","email","PureComponent","numberFormat","value","Intl","NumberFormat","currency","minimumFractionDigits","format","Page2","show","options","chart","colors","labels","tooltip","y","formatter","plotOptions","pie","startAngle","endAngle","customScale","offsetY","donut","size","dataLabels","enabled","fill","legend","fontSize","fontWeight","opts","w","globals","series","seriesIndex","responsive","breakpoint","position","a","push","parseInt","salary","Component","App","exact","path","component","PieChart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b24b2078.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class Page1 extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      loading: false,\r\n      call: 1,\r\n    };\r\n  }\r\n  handleClickArg = () => {\r\n    this.state.call = 0;\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      if (this.state.call === 1) {\r\n        axios\r\n          .get(`https://reqres.in/api/users?page=2`, {\r\n            headers: { \"app-id\": \"60c9448aa9b59526b9010cfc\" },\r\n          })\r\n          .then(({ data }) => {\r\n            console.log(data);\r\n            this.setState({\r\n              data: data.data,\r\n              loading: false,\r\n            });\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-div\">\r\n        <div className=\"card\">\r\n          <div className=\"prime-btn\">\r\n            <Link to={\"/piechart\"} onClick={this.handleClickArg}>\r\n              <button>Go to Page2 &rarr;</button>\r\n            </Link>\r\n          </div>\r\n          {this.state.loading ? (\r\n            <div style={{ textAlign: \"center\", marginTop: 100 }}>\r\n              <Loader type=\"Bars\" color=\"#12A6FF\" height={100} width={100} />\r\n            </div>\r\n          ) : (\r\n            <div class=\"table-wrap\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Image</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.keys(this.state.data).map((val) => {\r\n                    return (\r\n                      <tr>\r\n                        <td className=\"tab-img\">\r\n                          <img src={this.state.data[val].avatar} alt=\"\" />\r\n                        </td>\r\n\r\n                        <td>{this.state.data[val].first_name}</td>\r\n                        <td>{this.state.data[val].first_name}</td>\r\n                        <td>{this.state.data[val].email}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst numberFormat = (value) =>\r\n  new Intl.NumberFormat(\"en-IN\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n    minimumFractionDigits: 0,\r\n  }).format(value);\r\n\r\nexport default class Page2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      show: false,\r\n      loading: false,\r\n      call: 1,\r\n      options: {\r\n        chart: {\r\n          type: \"donut\",\r\n        },\r\n        colors: [\"#148da0\", \"#5bafbd\", \"#a1d1d9\", \"#0e6370\"],\r\n        labels: [\"employee1\", \"employee2\", \"employee3\", \"employee4\"],\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (value) {\r\n              return numberFormat(value);\r\n            },\r\n          },\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            startAngle: 0,\r\n            endAngle: 360,\r\n            customScale: 0.7,\r\n            offsetY: -30,\r\n            donut: {\r\n              size: \"42%\",\r\n            },\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n        },\r\n        legend: {\r\n          fontSize: \"14px\",\r\n          fontWeight: 600,\r\n          offsetY: 50,\r\n          formatter: function (val, opts) {\r\n            return (\r\n              val +\r\n              \" - \" +\r\n              numberFormat(opts.w.globals.series[opts.seriesIndex])\r\n            );\r\n          },\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 450,\r\n              },\r\n              plotOptions: {\r\n                pie: {\r\n                  startAngle: 0,\r\n                  endAngle: 360,\r\n                  customScale: 0.9,\r\n                  offsetY: 0,\r\n                },\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n                offsetY: 0,\r\n                formatter: function (val, opts) {\r\n                  return (\r\n                    val +\r\n                    \" - \" +\r\n                    numberFormat(opts.w.globals.series[opts.seriesIndex])\r\n                  );\r\n                },\r\n              },\r\n            },\r\n          },\r\n          {\r\n            breakpoint: 900,\r\n            options: {\r\n              chart: {\r\n                width: 500,\r\n              },\r\n              plotOptions: {\r\n                pie: {\r\n                  startAngle: 0,\r\n                  endAngle: 360,\r\n                  customScale: 0.9,\r\n                  offsetY: 0,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          {\r\n            breakpoint: 1200,\r\n            options: {\r\n              chart: {\r\n                width: 600,\r\n              },\r\n              plotOptions: {\r\n                pie: {\r\n                  startAngle: 0,\r\n                  endAngle: 360,\r\n                  customScale: 0.9,\r\n                  offsetY: 0,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  handleClickArg = () => {\r\n    this.state.call = 0;\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      if (this.state.call === 1) {\r\n        axios\r\n          .get(`https://mocki.io/v1/9bb4e253-36cc-4d9a-bda4-19bce367bc11`)\r\n          .then(({ data }) => {\r\n            console.log(data);\r\n            this.setState({\r\n              data: data,\r\n              show: true,\r\n              loading: false,\r\n            });\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    let series = [];\r\n    Object.keys(this.state.data).map((val) => {\r\n      series.push(parseInt(this.state.data[val].salary));\r\n    });\r\n    return (\r\n      <div className=\"main-div\">\r\n        <div className=\"card\">\r\n          <div className=\"prime-btn\">\r\n            <Link to={\"/\"} onClick={this.handleClickArg}>\r\n              <button>Go to Page1 &rarr;</button>\r\n            </Link>\r\n          </div>\r\n          {this.state.loading ? (\r\n            <div style={{ textAlign: \"center\", marginTop: 100 }}>\r\n              <Loader type=\"Bars\" color=\"#12A6FF\" height={100} width={100} />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.show ? (\r\n                <div className=\"donut-div\">\r\n                  <div className=\"donut-head\">Donut Chart</div>\r\n                  <div className=\"donut\">\r\n                    <ReactApexChart\r\n                      options={this.state.options}\r\n                      series={series}\r\n                      type=\"donut\"\r\n                      width={\"60%\"}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport Page1 from \"./Page1\";\r\nimport PieChart from \"./PieChart\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route exact path=\"/\" component={Page1} />\r\n        <Route exact path=\"/piechart\" component={PieChart} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}